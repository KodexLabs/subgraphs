specVersion: 0.0.6
description: >-
  A secure & decentralized way to address resources on and off the blockchain
  using simple, human-readable names. Access domains and transfer history.
  Note: this deployment is Kodex specific as it tracks whether a registration was done through Kodex.
repository: "https://github.com/KodexLabs/subgraphs"
schema:
  file: ./schema.graphql
dataSources:
  - name: ENSRegistry
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: EnsRegistry
      address: '{{ ens.ensRegistry.address }}'
      startBlock: {{ ens.ensRegistry.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/ensRegistry.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: EnsRegistry
          file: ./node_modules/abi/ENS/Registry.json
      eventHandlers:
        - event: "Transfer(indexed bytes32,address)"
          handler: handleTransfer
        - event: "NewOwner(indexed bytes32,indexed bytes32,address)"
          handler: handleNewOwner
        - event: "NewResolver(indexed bytes32,address)"
          handler: handleNewResolver
        - event: "NewTTL(indexed bytes32,uint64)"
          handler: handleNewTTL
  - name: ENSRegistryOld
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: EnsRegistry
      address: '{{ ens.ensRegistryOld.address }}'
      startBlock: {{ ens.ensRegistryOld.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/ensRegistry.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: EnsRegistry
          file: ./node_modules/abi/ENS/Registry.json
      eventHandlers:
        - event: "Transfer(indexed bytes32,address)"
          handler: handleTransferOldRegistry
        - event: "NewOwner(indexed bytes32,indexed bytes32,address)"
          handler: handleNewOwnerOldRegistry
        - event: "NewResolver(indexed bytes32,address)"
          handler: handleNewResolverOldRegistry
        - event: "NewTTL(indexed bytes32,uint64)"
          handler: handleNewTTLOldRegistry
  - name: Resolver
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: Resolver
      startBlock: {{ ens.resolver.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/resolver.ts
      entities:
        - AddrChanged
        - MulticoinAddrChanged
        - NameChanged
        - AbiChanged
        - PubkeyChanged
        - Textchanged
        - ContenthashChanged
        - InterfaceChanged
        - AuthorisationChanged
      abis:
        - name: Resolver
          file: ./node_modules/abi/ENS/PublicResolver.json
      eventHandlers:
        - event: "ABIChanged(indexed bytes32,indexed uint256)"
          handler: handleABIChanged
        - event: "AddrChanged(indexed bytes32,address)"
          handler: handleAddrChanged
        - event: "AddressChanged(indexed bytes32,uint256,bytes)"
          handler: handleMulticoinAddrChanged
        - event: >-
            AuthorisationChanged(indexed bytes32,indexed address,indexed
            address,bool)
          handler: handleAuthorisationChanged
        - event: "ContenthashChanged(indexed bytes32,bytes)"
          handler: handleContentHashChanged
        - event: "InterfaceChanged(indexed bytes32,indexed bytes4,address)"
          handler: handleInterfaceChanged
        - event: "NameChanged(indexed bytes32,string)"
          handler: handleNameChanged
        - event: "PubkeyChanged(indexed bytes32,bytes32,bytes32)"
          handler: handlePubkeyChanged
        - event: "TextChanged(indexed bytes32,indexed string,string)"
          handler: handleTextChanged
  - name: BaseRegistrar
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: BaseRegistrar
      address: '{{ ens.baseRegistrar.address }}'
      startBlock: {{ ens.baseRegistrar.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/ethRegistrar.ts
      entities:
        - Registration
        - NameRegistered
        - NameRenewed
        - NameTransferred
      abis:
        - name: BaseRegistrar
          file: ./node_modules/abi/ENS/BaseRegistrar.json
      eventHandlers:
        - event: "NameRegistered(indexed uint256,indexed address,uint256)"
          handler: handleNameRegistered
        - event: "NameRenewed(indexed uint256,uint256)"
          handler: handleNameRenewed
        - event: "Transfer(indexed address,indexed address,indexed uint256)"
          handler: handleNameTransferred
  - name: EthRegistrarController
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: EthRegistrarController
      address: '{{ ens.ethRegistrarController.address }}'
      startBlock: {{ ens.ethRegistrarController.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/ethRegistrar.ts
      entities:
        - Registration
      abis:
        - name: EthRegistrarController
          file: ./node_modules/abi/ENS/EthRegistrarController.json
      eventHandlers:
        - event: >-
            NameRegistered(string,indexed bytes32,indexed
            address,uint256,uint256)
          handler: handleNameRegisteredByController
        - event: "NameRenewed(string,indexed bytes32,uint256,uint256)"
          handler: handleNameRenewedByController
